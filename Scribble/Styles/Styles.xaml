<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:Scribble.Controls"
                    xmlns:Models="clr-namespace:Scribble.Models"
                    xmlns:Logic="clr-namespace:Scribble.Logic">

    <Style TargetType="TextBlock" x:Key="GoldTitleStyle">
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
        <Setter Property="Margin" Value="15"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="GoldRegularStyle">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontFamily" Value="{DynamicResource Ubuntu}"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}" x:Key="TitleFont">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}"/>
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource Quicksand}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style TargetType="Controls:TimelineContent">
        <Setter Property="Background" Value="{StaticResource BackgroundColor2Brush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:TimelineContent">
                    <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ForegroundColorBrush}" BorderThickness="1" Width="200" Height="80">
                        <ContentPresenter x:Name="cc" Content="{TemplateBinding ContentControl.Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="mainBorder" To="3" Duration="0:0:.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="mainBorder" FillBehavior="Stop" Duration="0:0:.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Controls:MindMapContent">
        <Setter Property="Background" Value="{StaticResource BackgroundColor2Brush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:MindMapContent">
                    <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ForegroundColorBrush}" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="mainBorder" To="3" Duration="0:0:.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ThicknessAnimation Storyboard.TargetProperty="BorderThickness" Storyboard.TargetName="mainBorder" FillBehavior="Stop" Duration="0:0:.1"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Background" Value="{StaticResource BackgroundColor2Brush}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundColorBrush}"/>
        <Setter Property="BorderBrush" Value="Black"/>
    </Style>

    <Style TargetType="Controls:MindMapLineToolTip" BasedOn="{StaticResource {x:Type ToolTip}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Controls:MindMapLineToolTip">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" MinWidth="100" MaxWidth="300" Background="{TemplateBinding Background}">
                        <DockPanel Margin="5">
                            <TextBlock Margin="0, 4" DockPanel.Dock="Top" FontSize="18" FontWeight="Bold" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Header}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <Trigger Property="Text" Value="">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{TemplateBinding Description}" TextTrimming="WordEllipsis" TextWrapping="Wrap"/>
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>