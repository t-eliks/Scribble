<Window x:Class="Scribble.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ViewModels="clr-namespace:Scribble.ViewModels"
        xmlns:Controls="clr-namespace:Scribble.Controls"
        xmlns:Models="clr-namespace:Scribble.Models"
        xmlns:Views="clr-namespace:Scribble.Views"
        xmlns:Logic="clr-namespace:Scribble.Logic"
        mc:Ignorable="d"
        Title="MainWindow" Height="700" MinWidth="1050" Width="1050"
        WindowStyle="None" AllowsTransparency="True" BorderBrush="{DynamicResource BackgroundColor2Brush}"
        Closing="Window_Closing">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"/>
    </WindowChrome.WindowChrome>
    
    <Window.DataContext>
        <ViewModels:MainViewModel/>
    </Window.DataContext>

    <DockPanel>
        <Border BorderBrush="{DynamicResource BackgroundColor1Brush}" BorderThickness="2">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="0" Background="{DynamicResource BackgroundImage}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="Scribble" Style="{StaticResource TitleFont}"/>
                        <Border BorderThickness="1" Grid.Row="1">
                        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                            <Button Command="{Binding CollapseCommand}" Style="{StaticResource ToolBarButton}">
                                <Button.Content>
                                    <Image Source="/icons/collapse.png" Stretch="UniformToFill"/>
                                </Button.Content>
                            </Button>
                            <Button IsEnabled="{Binding ToolButtonEnabled}" Style="{StaticResource ToolBarButton}">
                                <Button.Content>
                                    <Image Source="/icons/remove_toolbar.png" Stretch="UniformToFill"/>
                                </Button.Content>
                            </Button>
                            <Button IsEnabled="{Binding ToolButtonEnabled}" Command="{Binding AddFolderCommand}" Style="{StaticResource ToolBarButton}">
                                <Button.Content>
                                    <Image Source="/icons/add_toolbar.png" Stretch="UniformToFill"/>
                                </Button.Content>
                            </Button>
                            <Button Command="{Binding SaveCommand}" Style="{StaticResource ToolBarButton}">
                                <Button.Content>
                                    <Image Source="/icons/save.png" Stretch="UniformToFill"/>
                                </Button.Content>
                            </Button>
                        </StackPanel>
                    </Border>
                    <Controls:ImageButton Image="/icons/timeline.png" HorizontalAlignment="Left" Command="{Binding SwitchToTimelineView}" Content="Timeline" Margin="10, 8" FontSize="18" Grid.Row="2"/>
                    <Controls:ImageButton Image="/icons/mindmap.png" Command="{Binding SwitchToOutlinesView}" HorizontalAlignment="Left" Content="Mindmaps" FontSize="18" Margin="10, 8" Grid.Row="3"/>
                    <Border Margin="0, 10, 0, 0" Grid.Row="4" BorderThickness="1">
                        <Controls:ExtendedTreeView BorderBrush="Transparent" ItemTemplate="{StaticResource TreeViewDataTemplate}" Background="Transparent" ItemsSource="{Binding TreeViewItems}" _SelectedItem="{Binding SelectedProjectItem, Mode=TwoWay}" ItemContainerStyle="{DynamicResource ExtendedTreeViewItemStyle}"/>
                    </Border>
                </Grid>
                <Border Grid.Column="1">
                    <Grid Background="{DynamicResource BackgroundColor2Brush}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="50"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <DockPanel WindowChrome.IsHitTestVisibleInChrome="True" Margin="0, 0, 5, 0">
                            <Menu DockPanel.Dock="Left" Background="Transparent" Style="{DynamicResource MenuStyle1}">
                                <MenuItem Header="Project" Template="{DynamicResource MenuItemControlTemplate1}" Foreground="{StaticResource ForegroundColorBrush}">
                                    <MenuItem Header="Save" Template="{DynamicResource MenuItemControlTemplate2}" InputGestureText="Ctrl + S"/>
                                    <MenuItem Header="Open Project.." Template="{DynamicResource MenuItemControlTemplate2}" Command="{Binding OpenProjectCommand}" />
                                </MenuItem>
                                <MenuItem Template="{DynamicResource MenuItemControlTemplate1}" Header="Options">
                                    <MenuItem Template="{DynamicResource MenuItemControlTemplate2}" Header="Preferences..." Command="{Binding OpenPreferencesCommand}"/>
                                </MenuItem>
                            </Menu>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                <Button x:Name="minimiseBtn" Width="18" Height="18" Style="{StaticResource WindowStyleButton}">
                                    <Button.Content>
                                        <Image Source="/icons/minimise.png"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="maximiseBtn" Width="18" Height="18" Style="{StaticResource WindowStyleButton}">
                                    <Button.Content>
                                        <Image Source="/icons/maximise.png"/>
                                    </Button.Content>
                                </Button>
                                <Button x:Name="exitBtn" Width="18" Height="18" Style="{StaticResource WindowStyleButton}">
                                    <Button.Content>
                                        <Image Source="/icons/exit.png"/>
                                    </Button.Content>
                                </Button>
                            </StackPanel>
                        </DockPanel>
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="100"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="searchTextBox" Grid.Column="0" Text="{Binding SearchQuery, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TopSearchTextBox}" Margin="10"/>
                            <Popup IsOpen="{Binding IsSearchOpen, Mode=TwoWay}" StaysOpen="False" x:Name="searchPopUp" Grid.Column="0">
                                <ListBox Background="{StaticResource AccentColor1Brush}" Padding="3" ItemTemplateSelector="{StaticResource SearchDataTemplateSelector}" ItemContainerStyle="{StaticResource PickProfileItemContainerTemplate}" ItemsSource="{Binding SearchResults}"/>
                            </Popup>
                            <Button Background="{DynamicResource BackgroundColor2Brush}" Content="{Binding ProjectName}" Grid.Column="1" Height="30" Width="100" MinWidth="100"/>
                        </Grid>
                        <TabControl x:Name="cc" IsHitTestVisible="True" Style="{StaticResource ViewTabControlStyle}" Grid.Row="2" ItemsSource="{Binding ViewItems}">
                            <TabControl.Resources>
                                <Style TargetType="{x:Type TabItem}">
                                    <Setter Property="MinWidth" Value="120"/>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="Height" Value="Auto"/>
                                    <Setter Property="Background" Value="{StaticResource AccentColor1Brush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource ForegroundColorBrush}"/>
                                    <Setter Property="FontFamily" Value="{StaticResource Quicksand}"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                    <Setter Property="Padding" Value="5"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type TabItem}">
                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                                                    <Grid.Resources>
                                                        <Logic:BindingProxy x:Key="proxy" Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=DataContext}"/>
                                                    </Grid.Resources>
                                                    <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ForegroundColorBrush}" BorderThickness="0" CornerRadius="0" Margin="0">
                                                    </Border>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="20"/>
                                                        </Grid.ColumnDefinitions>
                                                        <ContentPresenter x:Name="contentPresenter" Grid.Column="0" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}">
                                                            <ContentPresenter.Style>
                                                                <Style TargetType="ContentPresenter">
                                                                    <Setter Property="AllowDrop" Value="True"/>
                                                                    <EventSetter Event="PreviewMouseDown" Handler="TabItem_Drag"/>
                                                                    <EventSetter Event="Drop" Handler="TabItem_Drop"/>
                                                                </Style>
                                                            </ContentPresenter.Style>
                                                        </ContentPresenter>
                                                        <Button Command="{Binding Data.CloseTabCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}" Grid.Column="1" HorizontalAlignment="Right" Width="12" Height="12" Margin="5, 0">
                                                            <Button.Background>
                                                                <ImageBrush ImageSource="/icons/exit.png" Stretch="UniformToFill"/>
                                                            </Button.Background>
                                                            <Button.Style>
                                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TabItem}, Path=IsMouseOver}" Value="True">
                                                                            <Setter Property="Visibility" Value="Visible"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Button.Style>
                                                        </Button>
                                                    </Grid>
                                                    <Grid.ContextMenu>
                                                        <ContextMenu>
                                                            <MenuItem Template="{StaticResource SubmenuItem}" Header="Close" Command="{Binding Data.CloseTabCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}"/>
                                                            <MenuItem Template="{StaticResource SubmenuItem}" Header="Close all others" Command="{Binding Data.CloseOtherTabsCommand, Source={StaticResource proxy}}" CommandParameter="{Binding}"/>
                                                        </ContextMenu>
                                                    </Grid.ContextMenu>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="Cursor" Value="Hand"/>
                                                        <Setter Property="Background" Value="{StaticResource BackgroundColor2Brush}"/>
                                                        <Setter Property="BorderThickness" TargetName="mainBorder" Value="1"/>
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                                        <Setter Property="Cursor" Value="Hand"/>
                                                        <Setter Property="Background" Value="{StaticResource BackgroundColor2Brush}"/>
                                                        <Setter Property="BorderThickness" TargetName="mainBorder" Value="1, 1, 1, 0"/>
                                                    </DataTrigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock x:Name="t" Text="{Binding}" FontWeight="Bold" FontSize="14" FontFamily="{DynamicResource Ubuntu}"/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TabControl.Resources>
                        </TabControl>
                        <!--<ContentControl x:Name="cc" Grid.Row="2" IsHitTestVisible="True" Content="{Binding CurrentView}" Visibility="Collapsed"/>-->
                    </Grid>
                </Border>
            </Grid>
        </Border>
    </DockPanel>
</Window>